name: Mirror to GitLab QA

on:
  push:
    branches:
      - "**"
    tags:
      - "**"
  delete:
    branches:
      - "**"
    tags:
      - "**"
  workflow_dispatch:

jobs:
  mirror:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set git identity
        run: |
          git config user.name "GitHub→GitLab QA Mirror Bot"
          git config user.email "mirror-bot@users.noreply.github.com"

      - name: Push to GitLab QA fork
        env:
          # URL HTTPS do fork QA (Clone → HTTPS no GitLab QA)
          GITLAB_QA_REPO: https://gitlab.com/<seu-namespace>/<fork-qa>.git
          GITLAB_QA_TOKEN: ${{ secrets.GITLAB_QA_TOKEN }}
        run: |
          # monta URL autenticada
          AUTH_URL="${GITLAB_QA_REPO_URL/https:\/\//https:\/\/oauth2:${GITLAB_QA_TOKEN}@}"
          git remote add gitlab-qa "$AUTH_URL"

          # Se for deleção
          if [[ "${GITHUB_EVENT_NAME}" == "delete" ]]; then
            REF="${GITHUB_REF#refs/}"
            git push gitlab-qa ":${REF}"
            exit 0
          fi

          # Se for tag
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
            git push gitlab-qa "refs/tags/${TAG}:refs/tags/${TAG}"
          else
            BRANCH="${GITHUB_REF#refs/heads/}"

            # monta destino dev/<actor>/frontend
            ACTOR="$(echo "${GITHUB_ACTOR}" | tr '[:upper:]' '[:lower:]')"
            DEST_BRANCH="dev/${ACTOR}/frontend"

            # pega estado atual no GitLab QA
            git fetch --no-tags gitlab-qa "${DEST_BRANCH}" || true

            # envia respeitando alterações novas
            git push --force-with-lease gitlab-qa "HEAD:refs/heads/${DEST_BRANCH}"
          fi
