name: Mirror to GitLab

on:
  push:
    branches:
      - "**"
    tags:
      - "**"
  delete:
    branches:
      - "**"
    tags:
      - "**"
  workflow_dispatch:

jobs:
  mirror:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set git identity
        run: |
          git config user.name "GitHub→GitLab Mirror Bot"
          git config user.email "mirror-bot@users.noreply.github.com"

      - name: Push to GitLab
        env:
          # SUBSTITUA pela URL HTTPS do seu repo no GitLab (Code → Clone → HTTPS)
          GITLAB_REPO_URL: https://gitlab.com/projeto-final-maisprati-codifica/projetoFinalMaisPraTi_grupo6.git
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        run: |
          AUTH_URL="${GITLAB_REPO_URL/https:\/\//https:\/\/oauth2:${GITLAB_TOKEN}@}"
          git remote add gitlab "$AUTH_URL"

          # Deleções (branch/tag)
          if [[ "${GITHUB_EVENT_NAME}" == "delete" ]]; then
            REF="${GITHUB_REF#refs/}"
            git push gitlab ":${REF}"
            exit 0
          fi

          # Tags x Branches
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
            git push gitlab "refs/tags/${TAG}:refs/tags/${TAG}"
          else
            BRANCH="${GITHUB_REF#refs/heads/}"
          # Garantir que temos o estado atual da branch no GitLab
            git fetch --no-tags gitlab "${BRANCH}" || true
          # Forçar push respeitando alterações novas
            git push --force-with-lease gitlab "HEAD:refs/heads/${BRANCH}"
          fi

